---
title: "Initial MARINe species data cleaning and exploration"
format: html
author: "Jordan Sibley"
date: last-modified
editor_options: 
  chunk_output_type: console
---

## Set Up

```{r}
#| code-fold: true
#| message: false
# Load packages 
library(tidyverse)
library(here)
library(readxl)
library(spData)
library(sf)
library(tmap)
library(kableExtra)
```

## Data 

```{r}
#| code-fold: true
# Read in three excel files from MARINe biodiversity data 
point_contact_raw <- read_excel(here('data', 'cbs_data_CA_2023.xlsx'), sheet = 'point_contact_summary_data')
quadrat_raw <- read_excel(here('data', 'cbs_data_CA_2023.xlsx'), sheet = 'quadrat_summary_data')
swath_raw <- read_excel(here('data', 'cbs_data_CA_2023.xlsx'), sheet = 'swath_summary_data')

# Read in Dangermond preserve shape file 
dangermond <- read_sf(here('data', 'dangermond_shapefile', 'jldp_boundary.shp'))

# Read in California state boundary 
california <- spData::us_states %>% 
  filter(NAME == "California")

```

Dangermond shape file: https://dangermondpreserve-tnc.hub.arcgis.com/datasets/54ca8cdd3a0b4822b5f728ba34ca01f2_2/explore

## Data Cleaning Plan

Notes on what Erica coded:

-   Read in `point_contact_summary_data`, `quadrat_summary_data`, and `swath_summary_data` from the excel file under `MARINe_biodiversity_data` folder.

-   Remove species lumps that aren't of focus

-   Filter to `Mainland` to exclude the islands

-   Create present or absent category of `total_counts` column (\> 0 is now 1)

-   Join 3 data frames into 1

-   Group by `marine_site_name`, `latitude`, `longitude`, and `species_lump` and then convert `total_counts` to be 1 (if sum is greater than one)

-   Northern threshold of latitude = 34.4

-   Southern threshold of latitude = 34.9

**My plan to streamline this process**

For `point_contact_summary_data`:

-   remove columns: `number_of_transect_locations`, `percent_cover`
-   Rename `number_of_hits` to be `total_count`

For `quadrat_summary_data`:

-   remove columns: `number_of_quadrats_sampled`, `total_area_sampled_m2`, `density_per_m2`

For `swath_summary_data`:

-   remove columns: `number_of_transects_sampled`, `est_swath_area_searched_m2`, `density_per_m2`

For all three:

-   Create data collection source (`point contact`, `quadrat`, `swath`)
-   Filter to `Mainland`
-   Remove species lumps that aren't of focus

Join the three datasets together

While Erica did not separate by year, I feel it would be valuable to separate the lat long and species by the year so that you can see the species range of the year.  

## Data Cleaning 
```{r}
#| code-fold: true

# Clean point_contact dataset 
point_contact_clean <- point_contact_raw %>% 
  # Remove non-matching columns 
  select(!c('number_of_transect_locations', 'percent_cover')) %>% 
  # Rename num of hits to total count 
  rename(total_count = number_of_hits) %>% 
  # Create new data collection source column 
  mutate(collection_source = "point contact") %>% 
  # Filter to mainland only 
  filter(island == "Mainland") %>% 
  # Remove certain species lumps 
  filter(!species_lump %in% c("Rock", "Sand", "Tar", "Blue Green Algae", "Red Crust", "Diatom", "Ceramiales"))

# Clean quadrat dataset 
quadrat_clean <- quadrat_raw %>% 
  # Remove non-matching columns 
  select(!c('number_of_quadrats_sampled', 'total_area_sampled_m2', 'density_per_m2')) %>% 
  # Create new data collection source column 
  mutate(collection_source = "quadrat") %>% 
  # Filter to mainland only 
  filter(island == "Mainland") %>% 
  # Remove certain species lumps 
  filter(!species_lump %in% c("Rock", "Sand", "Tar", "Blue Green Algae", "Red Crust", "Diatom", "Ceramiales"))

# Clean swath dataset 
swath_clean <- swath_raw %>% 
  # Remove non-matching columns 
  select(!c('number_of_transects_sampled', 'est_swath_area_searched_m2',  'density_per_m2')) %>% 
  # Create new data collection source column 
  mutate(collection_source = "swath") %>% 
  # Filter to mainland only 
  filter(island == "Mainland") %>% 
  # Remove certain species lumps 
  filter(!species_lump %in% c("Rock", "Sand", "Tar", "Blue Green Algae", "Red Crust", "Diatom", "Ceramiales"))
```


#### Merge datasets 

Since all three datasets have the same columns, I will merge the datasets into one using the dpylr function `bind_rows`
```{r}
# Merge the 3 dataset together 
biodiv_merge <- bind_rows(point_contact_clean, quadrat_clean, swath_clean)
```

#### Group by site, species, (and year?)  
```{r}
#| code-fold: true
# Group by site species and year 
# biodiv_grouped <- biodiv_merge %>% 
#   group_by(marine_site_name, latitude, longitude, species_lump, year) %>% 
#   summarise(num_count = sum(total_count))
```

- This leaves a total of 101,577 rows (from an orginal 102,522 rows)
- From 2000 to 2023 
- I could consider combining my year blocks (every 10 years?)

Just to see, lets group by and not include year, that way we get the total range from the year 2000 to 2023 

```{r}
# Group by site and species (no year)
biodiv_total <- biodiv_merge %>% 
  group_by(marine_site_name, latitude, longitude, species_lump) %>% 
  summarise(num_count = sum(total_count))
```

Rows = 39,413


#### Create present or not present column 
```{r}
# Create column to indicate presence/absence
biodiv_total <- biodiv_total %>% 
  mutate(presence = ifelse(num_count >= 1, 1, 0))
```


### Point Conception Latitude Buffer 
```{r}
# Create north and south threshold 0.5 degrees around Point Conception 
north_bound <- 34.9
south_bound <- 34.4 

# Confirm that these are the correct lats for the buffer with Erica 
```

## Range Classification 

1. **Southern Range Edge**: Present above the north bound, present within the preserve, and absent below the south bound.
2. **Northern Range Edge**: Present below the south bound, present within the preserve, and absent above the north bound.
3. **Continuous Presence**: Present within the preserve, below the south bound, and above the north bound.
4. **Avoidant Presence**: Found North and South, but not within the buffer. 
5. **Dangermond Only Presence**: Only found within the buffer 
6. **Southern Only Presence**: Only found south of the buffer. 
7. **Northern Only Presence**: Only found north of the buffer. 


```{r}
# Classify species by range edge category
range_edge_categories <- biodiv_total %>%
    group_by(species_lump) %>%
  summarize(
    present_below_south = any(latitude < south_bound & presence==1),
    present_within_buffer = any(latitude <= north_bound & presence==1) & 
        any(latitude >= south_bound & presence ==1),
    present_above_north = any(latitude > north_bound & presence==1)
  ) %>%
  mutate(
    range_edge_category = case_when(
      !present_above_north & present_within_buffer & present_below_south ~ "Northern Range Edge",
      present_above_north & present_within_buffer & !present_below_south ~ "Southern Range Edge",
      present_above_north & present_within_buffer & present_below_south ~ "Continuous Presence",
      present_above_north & !present_within_buffer & present_below_south ~ "Avoidant Presence",
      !present_above_north & !present_within_buffer & present_below_south ~ "Southern Only Presence",      
      present_above_north & !present_within_buffer & !present_below_south ~ "Northern Only Presence",
      !present_above_north & present_within_buffer & !present_below_south ~ "Dangermond Only Presence",
      TRUE ~ "Absent Species"
    )
  )

range_edge_categories <- range_edge_categories %>%
  arrange(range_edge_category)
```

#### Summary Table 
```{r}
# Summarize the data
summary_table <- range_edge_categories %>%
  group_by(range_edge_category) %>%
  summarize(`Total species` = n(), .groups = "drop") 

# Create a kableExtra table
summary_table %>%
  rename(`Range Category` = range_edge_category) %>%
  kbl(caption = "Species range categories of MARINe Biodiv data") %>%
  kable_classic(full_width = FALSE, html_font = "Times")
```


Need to see how many species are found in `biodiv_total` and `range_edge_category` to confirm no species were lost 
```{r}
#| code-fold: true
# unique(biodiv_total$species_lump)
# unique(range_edge_categories$species_lump)
```

Both are at 375 
Notes on how we can improve upon range categories 

- Make a column that sums the present observations 
- Make a column that sums the absent observations 
- Could merge this dataset with the `biodiv_geo` dataset that is formed later so that there is one single dataset that contains the geometry column and the range edge category. 


## Map of California with Dangermond Preserve 

Goal for this visualization is to create a map of California with the preserve highlighted. Could be used to visualize the species ranges.  

```{r}
#| code-fold: true
# Convert to WGS84 to lat long
california <- st_transform(california, crs = 4326)
dangermond <- st_transform(dangermond, crs = 4326)

# check that the coordinate reference systems match 
if(st_crs(california) == st_crs(dangermond)) {
  print("The coordinate reference systems match")
} else {
  print("The coordinate reference systems do NOT match. Transformation of CRS is recommended.")
}
```

```{r}
#| code-fold: true
# Map of California with preserve highlighted 
tm_shape(california) +
  tm_borders() + 
tm_shape(dangermond) + 
  tm_polygons(col = 'red') + 
tm_credits("Dangermond Preserve", 
           position = c(0.41, 0.22),
           size = 0.7)

# save this one 
```


### Bounding box for closer view of Preserve + Santa Barbara 

```{r}
  #| code-fold: true
# Create bounding box for closer to preserve 
bbox_sb <- st_bbox(c(xmin = -121.835697,
                     xmax = -118.597476,
                     ymax = 35.544274,
                     ymin = 33.514814))

# Map with SB bounding box 
tm_shape(california, bbox = bbox_sb) +
  tm_borders() + 
tm_shape(dangermond) + 
  tm_polygons(col = 'red')
```



#### Convert biodiv data to sf object 
```{r}
#| code-fold: true
biodiv_geo <- biodiv_total %>% 
  st_as_sf(coords = c("longitude", "latitude"), crs = st_crs(dangermond), remove = FALSE)

# Check that the crs matches 
if(st_crs(california) == st_crs(biodiv_geo)) {
  print("The coordinate reference systems match")
} else {
  print("The coordinate reference systems do NOT match. Transformation of CRS is recommended.")
}

# Convert to WGS84 
#biodiv_geo <- st_transform(biodiv_geo, crs = 4326)
```


### California mussel 

This is a species that has a known range that spans all of CA 
```{r}
#| code-fold: true
# Filter to cal mussel species to potentially use (for some reason it keeps getting wrong latitudes, might not use)
mussel_present <- biodiv_geo %>% 
  filter(species_lump == "Mytilus californianus") %>% 
  filter(presence == 1)

mussel_absent <- biodiv_geo %>% 
  filter(species_lump == "Mytilus californianus") %>% 
  filter(presence == 0)
```

### Map of mussels present and absent 
```{r}
#| code-fold: true
# california base map
tm_shape(california) +
  tm_borders() +
# dangermond preserve 
tm_shape(dangermond) + 
  tm_polygons(col = 'red') + 
tm_credits("Dangermond Preserve", 
           position = c(0.41, 0.22),
           size = 0.7) + 
# mussel distribution 
tm_shape(mussel_present) + 
  tm_dots(col = "blue", 
          size = 0.15, 
          alpha = 0.6) +
tm_shape(mussel_absent) + # mussels absent
  tm_dots(col = 'red',
          size = 0.15,
          alpha = 0.6) + 
  
tm_add_legend(type = "symbol",  # add legend for dots 
              labels = "Species present", 
              col = "blue") + 
tm_add_legend(type = "symbol",  # add legend for dots 
              labels = "Species absent", 
              col = "red") + 
tm_layout(main.title = "M.californianus CA distribution",
          fontfamily = "serif",
          legend.position = c("right", "top"),
          legend.frame = TRUE)


```



### Map mussel distribution near preserve 
```{r}
#| code-fold: true
# Create a sf objec for the buffer lines
buffer_lines <- st_sfc(
  st_linestring(rbind(c(-125, 34.4), c(-115, 34.4))), # north bound
  st_linestring(rbind(c(-125, 34.9), c(-115, 34.9)))  # south bound
) %>% 
  st_set_crs(4326) # Set to WGS84


tm_shape(california, bbox = bbox_sb) +
  tm_polygons(col = "#bae4b3") + # land color 
tm_shape(dangermond) +
  tm_polygons(col = "orange") +
tm_shape(mussel_present) + # mussels present
  tm_dots(col = "blue", 
          size = 0.15, 
          alpha = 0.6) +
tm_shape(mussel_absent) + # mussels absent
  tm_dots(col = 'firebrick',
          size = 0.15,
          alpha = 0.6) + 
  tm_shape(buffer_lines) +
  tm_lines(col = "grey", lwd = 2, lty = "dashed") + # Add buffer lines
tm_add_legend(type = "symbol",  # add legend for dots 
              labels = "Species present", 
              col = "blue") + 
tm_credits("Dangermond Preserve", # preserve label 
           position = c(0.45, 0.5)) +
tm_scale_bar(position = c(0.02, 0.02), width = 0.2) + # scale bar
tm_compass(position = c(0.01, 0.08), text.size = 0.8) + # compass
tm_layout(bg.color = "#daf0ff", # background ocean color 
          main.title = "M.californianus surveyed by MARINe (2000-2023)",
          fontfamily = "serif",
          legend.position = c("left", "top"),
          legend.frame = TRUE)
```



#### Checking the range edge categories 

Acmaea mitra - whitecap limpet - NORTHERN ONLY PRESENCE 

Ahnfeltiopsis linearis - type of algae - NORTHERN SPECIES RANGE EDGE 

[Confirm known species range](https://ucjeps.berkeley.edu/seaweedflora/eflora_display.php?tid=115)"Common to abundant on sand-swept rocks, midtidal to lower intertidal, S. Br. Columbia to Pt. Conception, Calif" 

Limpet 
```{r}
#| code-fold: true
# Filter for limpet species and presnece and absence 
limpet <- biodiv_geo |> 
  filter(species_lump == "Acmaea mitra")

limpet_pres <- limpet |> 
  filter(presence == 1)

limpet_abs <- limpet |> 
  filter(presence == 0)


# Map of range to confirm no presence south of Dangermond Preserve 
# california base map
tm_shape(california) +
  tm_borders() +
# dangermond preserve 
tm_shape(dangermond) + 
  tm_polygons(col = 'orange') + 
tm_credits("Dangermond Preserve", 
           position = c(0.41, 0.22),
           size = 0.7) + 
tm_shape(limpet_pres) + 
  tm_dots(col = "blue", alpha = 0.5, size = 0.15) + 
tm_shape(limpet_abs) + 
  tm_dots(col = "red", alpha = 0.5, size = 0.15) + 
  
tm_add_legend(type = "symbol",  # add legend for dots 
              labels = "Species present", 
              col = "blue") + 
tm_add_legend(type = "symbol",  # add legend for dots 
              labels = "Species absent", 
              col = "red") + 
tm_layout(main.title = "Acmaea mitra CA distribution",
          fontfamily = "serif",
          legend.position = c("right", "top"),
          legend.frame = TRUE) + 
  tm_shape(buffer_lines) +
  tm_lines(col = "grey", lwd = 2, lty = "dashed")


print(min(limpet_pres$latitude))
# Minimum latitude is NOT within the buffer zone (34.4 - 34.9)
# Northern species only confirmed 
```

Algae 
```{r}
#| code-fold: true
# Filter for algae species and presence and absence 
algae <- biodiv_geo |> 
  filter(species_lump == "Ahnfeltiopsis linearis")

algae_pres <- algae |> 
  filter(presence == 1)

algae_abs <- algae |> 
  filter(presence == 0)


# Map of range to confirm no presence south of Dangermond Preserve 
# california base map
tm_shape(california) +
  tm_borders() +
# dangermond preserve 
tm_shape(dangermond) + 
  tm_polygons(col = 'orange') + 
tm_credits("Dangermond Preserve", 
           position = c(0.41, 0.22),
           size = 0.7) + 
# absence + presence
  tm_shape(algae_pres) + 
  tm_dots(col = "blue", alpha = 0.5, size = 0.15) + 
tm_shape(algae_abs) + 
  tm_dots(col = "red", alpha = 0.5, size = 0.15) + 
  
tm_add_legend(type = "symbol",  # add legend for dots 
              labels = "Species present", 
              col = "blue") + 
tm_add_legend(type = "symbol",  # add legend for dots 
              labels = "Species absent", 
              col = "red") + 
tm_layout(main.title = "Ahnfeltiopsis linearis CA distribution",
          fontfamily = "serif",
          legend.position = c("right", "top"),
          legend.frame = TRUE) + 
  tm_shape(buffer_lines) +
  tm_lines(col = "grey", lwd = 2, lty = "dashed")


print(min(algae_pres$latitude))
# Min latitude is within the buffer zone 
```



